"""Make user_id NOT NULL

Revision ID: 071bd3b66eda
Revises: 100b49019283
Create Date: 2025-03-25 07:30:38.436699

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '071bd3b66eda'
down_revision: Union[str, None] = '100b49019283'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.create_table(
        "player_new",
        sa.Column("id", sa.Integer(), primary_key=True),
        sa.Column("user_id", sa.Integer(), sa.ForeignKey("user.id"), nullable=False, unique=True),
        sa.Column("title", sa.String(), nullable=False, server_default="Noobie"),
        sa.Column("level", sa.Integer(), nullable=False, server_default="1"),
        sa.Column("experience", sa.Integer(), nullable=False, server_default="0"),
    )

    # Copy existing data
    op.execute("INSERT INTO player_new (id, user_id, title, level, experience) SELECT id, user_id, title, level, experience FROM player")

    # Drop the old table
    op.drop_table("player")

    # Rename the new table to "player"
    op.rename_table("player_new", "player")

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_constraint(None, 'player', type_='foreignkey')
    op.create_foreign_key(None, 'player', 'user', ['id'], ['id'])
    op.drop_constraint(None, 'player', type_='unique')
    op.alter_column('player', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
